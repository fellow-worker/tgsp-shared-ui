trigger:
  - master

name: 0.1.$(Build.BuildId)
  
pool:
    vmImage: 'ubuntu-latest'
  
steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.x'
    displayName: 'install node.js'
  
  - task: CopyFiles@2
    inputs:
      SourceFolder: 'src'
      Contents: '**'
      TargetFolder: '$(Agent.BuildDirectory)/_build'
    displayName: 'copy files'
  
  - task: CopyFiles@2
    inputs:
      Contents: 'package.json'
      TargetFolder: '$(Agent.BuildDirectory)/_build'
    displayName: 'copy package.json'
  
  - task: FileTransform@2
    inputs:
      folderPath: '$(Agent.BuildDirectory)/_build'
      jsonTargetFiles: 'package.json'
    displayName: 'set version number'

  - task: CopyFiles@2
    inputs:
      Contents: 'styleguide.config.js'
      TargetFolder: '$(Agent.BuildDirectory)/_build'
    displayName: 'copy styleguide.config.js'
  
  - task: CmdLine@2
    inputs:
      script: 'sed -i -e ''s/src\///g'' styleguide.config.js'
      workingDirectory: '$(Agent.BuildDirectory)/_build'
    displayName: 'prepare styleguidist'
  
  - task: Npm@1
    inputs:
      command: 'install'
      workingDir: '$(Agent.BuildDirectory)/_build'
    displayName: 'npm install'
  
  - task: Npm@1
    inputs:
      command: 'publish'
      workingDir: '$(Agent.BuildDirectory)/_build'
      publishEndpoint: 'registry.npmjs.org'
    displayName: 'npm publish'
  
  - task: Npm@1
    inputs:
      command: 'custom'
      workingDir: '$(Agent.BuildDirectory)/_build'
      customCommand: 'run styleguidist-build'
    displayName: 'npm build styleguidist'
  
  - task: CopyFiles@2
    inputs:
      SourceFolder: '_build/dist'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: 'copy to staging'
  
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
    displayName: 'publish artifacts'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '_build/dist'
      Contents: '**'
      TargetFolder: '$(Agent.BuildDirectory)/_docker/dist'
    displayName: 'copy files for docker'

  - task: CopyFiles@2
    inputs:
      Contents: 'Dockerfile'
      TargetFolder: '$(Agent.BuildDirectory)/_docker'
    displayName: 'copy Dockerfile'    

  - task: Docker@2
    inputs:
      containerRegistry: 'docker hub'
      repository: 'fellowworker/tgsp-shared-ui'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      buildContext: '_docker'
    displayName: 'docker build and push'